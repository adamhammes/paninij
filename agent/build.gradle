plugins {
  id 'base'
}

def runtimeClasses = project(':core:lang').sourceSets.main.output.classesDir

task makeBuildDir << {
  buildDir.mkdirs()
}

task makefiles(type: Exec, dependsOn: makeBuildDir) {
  description = 'Uses CMake to initialize the build directory.'
  workingDir buildDir
  commandLine 'cmake', '-G', 'Unix Makefiles',
                       '-D', "PANINIJ_RUNTIME_CLASSES_PATH=${runtimeClasses}",
                       '-D', 'CMAKE_BUILD_TYPE=Debug', projectDir
}

task makeAll(type: Exec, dependsOn: [makefiles, ':core:lang:build']) {
  workingDir buildDir
  commandLine 'make', 'all'
}
build.dependsOn makeAll

// This is likely redundant, since `clean` will delete `$buildDir` anyway.
task makeClean(type: Exec, dependsOn: makefiles) {
  workingDir buildDir
  commandLine 'make', 'clean'
}
clean.dependsOn makeClean

task makeTest(type: Exec, dependsOn: makefiles) {
  workingDir buildDir
  commandLine 'make', 'test'
}
task test(dependsOn: makeTest)


// CMake recommends that a subdirectory of the source directory not be used.
def eclipseBuildDir = file("$projectDir/../agent-eclipse")

task makeEclipseBuildDir << {
  eclipseBuildDir.mkdirs()
}

task eclipse(type: Exec, dependsOn: makeEclipseBuildDir) {
  description = 'Uses CMake to initialize an Eclipse project.'
  workingDir eclipseBuildDir
  commandLine 'cmake', '-G', 'Eclipse CDT4 - Unix Makefiles',
                       '-D', "PANINIJ_RUNTIME_CLASSES_PATH=${runtimeClasses}",
                       '-D', 'CMAKE_BUILD_TYPE=Debug', projectDir
}
